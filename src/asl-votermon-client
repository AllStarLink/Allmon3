#!/usr/bin/python3
#
# Simple client to see that an asl-votermon instance 
# is working properly
#
# Copyright(C) 2023 AllStarLink
# Allmon3 and all components are Licensed under the AGPLv3
# see https://raw.githubusercontent.com/AllStarLink/Allmon3/develop/LICENSE

#

import asyncio
import argparse
import logging
import signal
import sys
import websockets

_BUILD_ID = "0.9.7"

def sigterm_handler(_signo, _stack_frame):
	print("exiting on signal %d" % (_signo))
	socket.close()
	sys.exit(0)

signal.signal(signal.SIGINT, sigterm_handler)
signal.signal(signal.SIGHUP, sigterm_handler)
signal.signal(signal.SIGTERM, sigterm_handler)

async def webSocketClient():
	url = "ws://{}:{}".format(args.host, args.port)
	async with websockets.connect(uri=url) as websocket:
		await websocket.send(args.password)
		message = await websocket.recv()
		print("{}".format(message))

if __name__ == "__main__":
	ap = argparse.ArgumentParser(description="Simple client to see that an asl-votermon instance.")
	ap.add_argument("host", type=str, help="FQDN or IP address of the asl-votermon to test")
	ap.add_argument("port", type=int, help="TCP port of asl-votermon to test")
	ap.add_argument("password", type=str, help="node admin password to access the asl-votermon instance")
	ap.add_argument("--debug", help="enable debug-level logging output", action="store_true")
	ap.add_argument("--version", help="get the version of the software", action="version", version='%(prog)s {}'.format(_BUILD_ID))
	args = ap.parse_args()
	
	log = logging.getLogger("asl-votermon")
	lh = logging.StreamHandler()
	lf = logging.Formatter(fmt="%(levelname)s: %(message)s")
	lh.setFormatter(lf)
	
	asyncio.run(webSocketClient())

