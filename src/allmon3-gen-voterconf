#!/usr/bin/python3
# asl-votermon.py - Monitor ASL Asterisk server for voter module status
#
# Copyright(C) 2023 AllStarLink
# Allmon3 and all components are Licensed under the AGPLv3
# see https://raw.githubusercontent.com/AllStarLink/Allmon3/develop/LICENSE
#

import argparse
import configparser
import logging
import logging.handlers
import os
import pprint
import sys

_BUILD_ID = "@@HEAD-DEVELOP@@"

######## MAIN PROGRAM ########

# Args and Log Setup
ap = argparse.ArgumentParser(description="Generate apache configuration for the voter websockets")
ap.add_argument("--config", help="path to INI configuration for the node")
ap.add_argument("--debug", help="enable debug-level logging output", action="store_true")
ap.add_argument("--version", help="get the version of the software", action="version", version='%(prog)s {}'.format(_BUILD_ID))
args = ap.parse_args()

log = logging.getLogger("allmon3-gen-voter")
lh = logging.StreamHandler()
lf = logging.Formatter(fmt="%(name)s: %(levelname)s: %(message)s")
lh.setFormatter(lf)
log.addHandler(lh)

if args.debug:
	log.setLevel(logging.DEBUG)
else:
	log.setLevel(logging.INFO)

if args.config:
	config_file = args.config
else:
	config_file = "/etc/allmon3/voter.ini"

# Parse configuration

try:
	if not os.path.exists(config_file):
		raise Exception("file not found: %s" % (config_file))
	log.debug("config file is %s", config_file)
	config = configparser.ConfigParser()
	config.read(config_file)
	log.debug({section: dict(config[section]) for section in config.sections()})

	print("# Global voter configs for Allmon3")
	print("ProxyAddHeaders On")
	print("ProxyPreserveHost On")
	print("RewriteEngine On") 	
	for node in config:
		if node != "DEFAULT":
			log.debug(node)
			log.debug(config[node])
			ws_port = config[node]["vmonport"]
			print("# voter config for node {}".format(node))
			print("ProxyPass /allmon3/ws/voter/{} ws://localhost:{}".format(node, ws_port))
			print("RewriteCond %{HTTP:Upgrade} websocket [NC]")
			print("RewriteCond %{HTTP:Connection} upgrade [NC]")
			print("RewriteRule ^/allmon3/ws/voter/{} \"ws://localhost:{}/\"".format(node, ws_port))

except Exception as e:
	log.error("INI parser error: %s", e)
	sys.exit(1)

sys.exit(0)
